package com.falldetection.controller;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.servlet.ModelAndView;
import com.falldetection.model.LoginInfo;
import com.falldetection.model.PatientInfo;
import com.falldetection.service.PatientService;

@Controller
public class PatientController {

	@Autowired
	PatientService patientService;

	@RequestMapping(value = "/login", method = RequestMethod.GET)
	public String showLogin(HttpServletRequest request, HttpServletResponse response,Model loginModel) {
		System.out.println("inside showlogin ------");
		
		loginModel.addAttribute("login", new LoginInfo());
		loginModel.addAttribute("includePage", "login");
		
		return  "login";
	}

	@RequestMapping(value = "/loginProcess", method = RequestMethod.POST)
	public ModelAndView loginProcess(HttpServletRequest request, HttpServletResponse response,
			@ModelAttribute("login") LoginInfo login) {

		ModelAndView modelAndView = null;

		PatientInfo user = patientService.validateUser(login);

		if (null != user) {
			modelAndView = new ModelAndView("Welcome");
			modelAndView.addObject("patientName", user.getPatientName());
		} else {
			modelAndView = new ModelAndView("login");
			modelAndView.addObject("message", "Username or Password is wrong!!");
		}

		return modelAndView;
	}

	/*
	 * @RequestMapping(value = "/loginform", method = RequestMethod.POST) public
	 * String loginUser(HttpServletRequest request, HttpServletResponse
	 * response, @ModelAttribute("patient") Patient patient,BindingResult result,
	 * Model model) {
	 * System.out.println("inside controller ----------------------"); if
	 * (result.hasErrors()) { return "error"; } model.addAttribute("name",
	 * patient.getUserName()); model.addAttribute("password",
	 * patient.getPassword()); model.addAttribute("patientsId",
	 * patient.getPatientsId().toString());
	 * 
	 * System.out.println("inside model ----------------------"+model);
	 * 
	 * String userId = patient.getPatientsId().toString();
	 * 
	 * String returnHomeUrl = rootURLWithAdditionalInfo(model, userId); return
	 * returnHomeUrl; }
	 * 
	 * public String rootURLWithAdditionalInfo(Model uiModel, String userId) {
	 * 
	 * uiModel.addAttribute("Patient ID", userId);
	 * 
	 * return "efall/detector"; }
	 */
}
